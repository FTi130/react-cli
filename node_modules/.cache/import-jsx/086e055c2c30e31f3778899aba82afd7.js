'use strict';

const React = require('react');

const {
  Text
} = require('ink');

const {
  Box
} = require("ink");

const TextInput = require("ink-text-input").default;

const wcc = require("world-countries-capitals");

const App = () => {
  const [country, setCountry] = React.useState("");
  const [capital, setCapital] = React.useState("");
  const [currency, setCurrency] = React.useState("");
  const [phone, setPhone] = React.useState("");
  React.useEffect(() => {
    const getCountry = wcc.getCountryDetailsByName(country);
    setCapital(getCountry[0].capital);
    setCurrency(getCountry[0].currency);
    setPhone(getCountry[0].phone_code);
  });
  return /*#__PURE__*/React.createElement(Box, {
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Box, {
    borderStyle: "round",
    borderColor: "green"
  }, /*#__PURE__*/React.createElement(Text, null, "Self made CLI just for fun")), /*#__PURE__*/React.createElement(TextInput, {
    placeholder: "\u0412\u0432\u0435\u0434\u0438 \u0441\u0442\u0440\u0430\u043D\u0443...",
    value: country,
    onChange: setCountry
  }), /*#__PURE__*/React.createElement(Box, {
    flexDirection: "column",
    width: 80,
    borderStyle: "single"
  }, /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, "Country Code")), /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, "Capital City")), /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, "Currency"))), /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, phone)), /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, capital)), /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, currency)))));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsIlRleHQiLCJCb3giLCJUZXh0SW5wdXQiLCJkZWZhdWx0Iiwid2NjIiwiQXBwIiwiY291bnRyeSIsInNldENvdW50cnkiLCJ1c2VTdGF0ZSIsImNhcGl0YWwiLCJzZXRDYXBpdGFsIiwiY3VycmVuY3kiLCJzZXRDdXJyZW5jeSIsInBob25lIiwic2V0UGhvbmUiLCJ1c2VFZmZlY3QiLCJnZXRDb3VudHJ5IiwiZ2V0Q291bnRyeURldGFpbHNCeU5hbWUiLCJwaG9uZV9jb2RlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0EsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxNQUFNO0FBQUNDLEVBQUFBO0FBQUQsSUFBU0QsT0FBTyxDQUFDLEtBQUQsQ0FBdEI7O0FBQ0EsTUFBTTtBQUFFRSxFQUFBQTtBQUFGLElBQVVGLE9BQU8sQ0FBQyxLQUFELENBQXZCOztBQUNBLE1BQU1HLFNBQVMsR0FBR0gsT0FBTyxDQUFDLGdCQUFELENBQVAsQ0FBMEJJLE9BQTVDOztBQUVBLE1BQU1DLEdBQUcsR0FBR0wsT0FBTyxDQUFDLDBCQUFELENBQW5COztBQUlBLE1BQU1NLEdBQUcsR0FBRyxNQUFNO0FBQ2pCLFFBQU0sQ0FBQ0MsT0FBRCxFQUFTQyxVQUFULElBQXVCVCxLQUFLLENBQUNVLFFBQU4sQ0FBZSxFQUFmLENBQTdCO0FBQ0EsUUFBTSxDQUFDQyxPQUFELEVBQVVDLFVBQVYsSUFBd0JaLEtBQUssQ0FBQ1UsUUFBTixDQUFlLEVBQWYsQ0FBOUI7QUFDQSxRQUFNLENBQUNHLFFBQUQsRUFBV0MsV0FBWCxJQUEwQmQsS0FBSyxDQUFDVSxRQUFOLENBQWUsRUFBZixDQUFoQztBQUNBLFFBQU0sQ0FBQ0ssS0FBRCxFQUFRQyxRQUFSLElBQW9CaEIsS0FBSyxDQUFDVSxRQUFOLENBQWUsRUFBZixDQUExQjtBQUVBVixFQUFBQSxLQUFLLENBQUNpQixTQUFOLENBQWdCLE1BQU07QUFDckIsVUFBTUMsVUFBVSxHQUFHWixHQUFHLENBQUNhLHVCQUFKLENBQTRCWCxPQUE1QixDQUFuQjtBQUNBSSxJQUFBQSxVQUFVLENBQUNNLFVBQVUsQ0FBQyxDQUFELENBQVYsQ0FBY1AsT0FBZixDQUFWO0FBQ0FHLElBQUFBLFdBQVcsQ0FBQ0ksVUFBVSxDQUFDLENBQUQsQ0FBVixDQUFjTCxRQUFmLENBQVg7QUFDQUcsSUFBQUEsUUFBUSxDQUFDRSxVQUFVLENBQUMsQ0FBRCxDQUFWLENBQWNFLFVBQWYsQ0FBUjtBQUNBLEdBTEQ7QUFPQSxzQkFDQyxvQkFBQyxHQUFEO0FBQUssSUFBQSxhQUFhLEVBQUM7QUFBbkIsa0JBQ0Msb0JBQUMsR0FBRDtBQUFLLElBQUEsV0FBVyxFQUFDLE9BQWpCO0FBQXlCLElBQUEsV0FBVyxFQUFDO0FBQXJDLGtCQUNDLG9CQUFDLElBQUQscUNBREQsQ0FERCxlQUlDLG9CQUFDLFNBQUQ7QUFDQyxJQUFBLFdBQVcsRUFBQyx3RUFEYjtBQUVDLElBQUEsS0FBSyxFQUFJWixPQUZWO0FBR0MsSUFBQSxRQUFRLEVBQUlDO0FBSGIsSUFKRCxlQVNDLG9CQUFDLEdBQUQ7QUFBSyxJQUFBLGFBQWEsRUFBQyxRQUFuQjtBQUE0QixJQUFBLEtBQUssRUFBRSxFQUFuQztBQUF1QyxJQUFBLFdBQVcsRUFBQztBQUFuRCxrQkFDQyxvQkFBQyxHQUFELHFCQUNDLG9CQUFDLEdBQUQ7QUFBSyxJQUFBLEtBQUssRUFBQztBQUFYLGtCQUNDLG9CQUFDLElBQUQsdUJBREQsQ0FERCxlQUtDLG9CQUFDLEdBQUQ7QUFBSyxJQUFBLEtBQUssRUFBQztBQUFYLGtCQUNDLG9CQUFDLElBQUQsdUJBREQsQ0FMRCxlQVNDLG9CQUFDLEdBQUQ7QUFBSyxJQUFBLEtBQUssRUFBQztBQUFYLGtCQUNDLG9CQUFDLElBQUQsbUJBREQsQ0FURCxDQURELGVBY0Msb0JBQUMsR0FBRCxxQkFDQyxvQkFBQyxHQUFEO0FBQUssSUFBQSxLQUFLLEVBQUM7QUFBWCxrQkFDQyxvQkFBQyxJQUFELFFBQU9NLEtBQVAsQ0FERCxDQURELGVBS0Msb0JBQUMsR0FBRDtBQUFLLElBQUEsS0FBSyxFQUFDO0FBQVgsa0JBQ0Msb0JBQUMsSUFBRCxRQUFPSixPQUFQLENBREQsQ0FMRCxlQVNDLG9CQUFDLEdBQUQ7QUFBSyxJQUFBLEtBQUssRUFBQztBQUFYLGtCQUNDLG9CQUFDLElBQUQsUUFBT0UsUUFBUCxDQURELENBVEQsQ0FkRCxDQVRELENBREQ7QUEwQ0EsQ0F2REQ7O0FBeURBUSxNQUFNLENBQUNDLE9BQVAsR0FBaUJmLEdBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3Qge1RleHR9ID0gcmVxdWlyZSgnaW5rJyk7XG5jb25zdCB7IEJveCB9ID0gcmVxdWlyZShcImlua1wiKTtcbmNvbnN0IFRleHRJbnB1dCA9IHJlcXVpcmUoXCJpbmstdGV4dC1pbnB1dFwiKS5kZWZhdWx0O1xuXG5jb25zdCB3Y2MgPSByZXF1aXJlKFwid29ybGQtY291bnRyaWVzLWNhcGl0YWxzXCIpO1xuXG5cblxuY29uc3QgQXBwID0gKCkgPT4ge1xuXHRjb25zdCBbY291bnRyeSxzZXRDb3VudHJ5XSA9IFJlYWN0LnVzZVN0YXRlKFwiXCIpO1xuXHRjb25zdCBbY2FwaXRhbCwgc2V0Q2FwaXRhbF0gPSBSZWFjdC51c2VTdGF0ZShcIlwiKTtcblx0Y29uc3QgW2N1cnJlbmN5LCBzZXRDdXJyZW5jeV0gPSBSZWFjdC51c2VTdGF0ZShcIlwiKTtcblx0Y29uc3QgW3Bob25lLCBzZXRQaG9uZV0gPSBSZWFjdC51c2VTdGF0ZShcIlwiKTtcblxuXHRSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuXHRcdGNvbnN0IGdldENvdW50cnkgPSB3Y2MuZ2V0Q291bnRyeURldGFpbHNCeU5hbWUoY291bnRyeSk7XG5cdFx0c2V0Q2FwaXRhbChnZXRDb3VudHJ5WzBdLmNhcGl0YWwpO1xuXHRcdHNldEN1cnJlbmN5KGdldENvdW50cnlbMF0uY3VycmVuY3kpO1xuXHRcdHNldFBob25lKGdldENvdW50cnlbMF0ucGhvbmVfY29kZSk7XG5cdH0pO1xuXG5cdHJldHVybiAoXG5cdFx0PEJveCBmbGV4RGlyZWN0aW9uPVwiY29sdW1uXCI+XG5cdFx0XHQ8Qm94IGJvcmRlclN0eWxlPVwicm91bmRcIiBib3JkZXJDb2xvcj1cImdyZWVuXCI+XG5cdFx0XHRcdDxUZXh0PlNlbGYgbWFkZSBDTEkganVzdCBmb3IgZnVuPC9UZXh0PlxuXHRcdFx0PC9Cb3g+XG5cdFx0XHQ8VGV4dElucHV0XG5cdFx0XHRcdHBsYWNlaG9sZGVyPVwi0JLQstC10LTQuCDRgdGC0YDQsNC90YMuLi5cIlxuXHRcdFx0XHR2YWx1ZSA9IHtjb3VudHJ5fVxuXHRcdFx0XHRvbkNoYW5nZSA9IHtzZXRDb3VudHJ5fVxuXHRcdFx0XHQvPlxuXHRcdFx0PEJveCBmbGV4RGlyZWN0aW9uPVwiY29sdW1uXCIgd2lkdGg9ezgwfSBib3JkZXJTdHlsZT1cInNpbmdsZVwiPlxuXHRcdFx0XHQ8Qm94PlxuXHRcdFx0XHRcdDxCb3ggd2lkdGg9XCI0MCVcIj5cblx0XHRcdFx0XHRcdDxUZXh0PkNvdW50cnkgQ29kZTwvVGV4dD5cblx0XHRcdFx0XHQ8L0JveD5cblxuXHRcdFx0XHRcdDxCb3ggd2lkdGg9XCI0MCVcIj5cblx0XHRcdFx0XHRcdDxUZXh0PkNhcGl0YWwgQ2l0eTwvVGV4dD5cblx0XHRcdFx0XHQ8L0JveD5cblxuXHRcdFx0XHRcdDxCb3ggd2lkdGg9XCI0MCVcIj5cblx0XHRcdFx0XHRcdDxUZXh0PkN1cnJlbmN5PC9UZXh0PlxuXHRcdFx0XHRcdDwvQm94PlxuXHRcdFx0XHQ8L0JveD5cblx0XHRcdFx0PEJveD5cblx0XHRcdFx0XHQ8Qm94IHdpZHRoPVwiNDAlXCI+XG5cdFx0XHRcdFx0XHQ8VGV4dD57cGhvbmV9PC9UZXh0PlxuXHRcdFx0XHRcdDwvQm94PlxuXG5cdFx0XHRcdFx0PEJveCB3aWR0aD1cIjQwJVwiPlxuXHRcdFx0XHRcdFx0PFRleHQ+e2NhcGl0YWx9PC9UZXh0PlxuXHRcdFx0XHRcdDwvQm94PlxuXG5cdFx0XHRcdFx0PEJveCB3aWR0aD1cIjQwJVwiPlxuXHRcdFx0XHRcdFx0PFRleHQ+e2N1cnJlbmN5fTwvVGV4dD5cblx0XHRcdFx0XHQ8L0JveD5cblx0XHRcdFx0PC9Cb3g+XG5cdFx0XHQ8L0JveD5cblx0XHQ8L0JveD5cblxuXHQpO1xuXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFwcDtcbiJdfQ==